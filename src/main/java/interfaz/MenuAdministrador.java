package interfaz;

import javax.swing.JOptionPane;

public class MenuAdministrador extends javax.swing.JFrame {
    
    private Colegio colegio = new Colegio();
    private Usuario usuario;
    private Persona alumno;
    private Apoderado apoderado;
    private Persona profesor;
    private Asignatura asignatura;
    private Nota nota;
    
    private String rut;
    private String nombre;
    private String ingresado;
    private int edad;
    
    private boolean volver = false;
    private boolean iterar = true;
    
    public MenuAdministrador() {
        initComponents();
        this.setLocationRelativeTo( null );
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        jLabel22 = new javax.swing.JLabel();

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("AULA VIRTUAL");
        jLabel1.setAlignmentY(0.0F);

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel2.setText("1. Desbloquear valores de prueba");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel3.setText("2. Registrar alumno");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel4.setText("3. Registrar profesor");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel5.setText("4. Inscribir curso alumno");

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel6.setText("5. Inscribir curso profesor");

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel7.setText("6. Mostrar alumnos");

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel8.setText("7. Mostrar profesores");

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel9.setText("8. Mostrar cursos alumno");

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel10.setText("9. Mostrar cursos profesor");

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel11.setText("10. Consultar alumno");

        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel12.setText("11. Consultar profesor");

        jLabel13.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel13.setText("12. Consultar curso");

        jLabel14.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel14.setText("13. Modificar curso alumno");

        jLabel15.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel15.setText("14. Modificar curso profesor");

        jLabel16.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel16.setText("15. Ingresar nota alumno");

        jLabel17.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel17.setText("16. Revisar situación académica");

        jLabel18.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel18.setText("17. Eliminar alumno");

        jLabel19.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel19.setText("18. Eliminar profesor");

        jLabel20.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel20.setText("0. Volver");

        jButton1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton1.setText("OK");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jTextField1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        jLabel22.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel22.setText("Ingrese la opción que desea realizar:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6)
                            .addComponent(jLabel7)
                            .addComponent(jLabel10)
                            .addComponent(jLabel11)
                            .addComponent(jLabel12)
                            .addComponent(jLabel13)
                            .addComponent(jLabel14)
                            .addComponent(jLabel15)
                            .addComponent(jLabel16)
                            .addComponent(jLabel17)
                            .addComponent(jLabel18)
                            .addComponent(jLabel19)
                            .addComponent(jLabel20)
                            .addComponent(jLabel8)
                            .addComponent(jLabel9))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jTextField1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel22))
                        .addGap(0, 0, Short.MAX_VALUE))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(223, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 254, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(223, 223, 223))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel12)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel13)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel14)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel15)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel16)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel17)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel18)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel19)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel20)
                .addGap(26, 26, 26)
                .addComponent(jLabel22)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(20, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        MenuPrincipal menu = new MenuPrincipal();
        int aux = 0;
        String opcion = jTextField1.getText();
        
        switch ( opcion ) {
            case "1":
                if ( !colegio.verificarAlumno( "20.522.213-8" ) ) {
                    alumno = new Alumno( "Bastián Caleb Sepúlveda Silva", "20.522.213-8", 20 ); colegio.agregarAlumno( alumno );
                    asignatura = new Asignatura( "Programación Orientada a Objetos", "INF2241-1" ); colegio.inscribirCursoAlumno( "20.522.213-8", asignatura );
                    asignatura = new Asignatura( "Fundamentos de Probabilidad", "EST2168-2" ); colegio.inscribirCursoAlumno( "20.522.213-8", asignatura );
                    asignatura = new Asignatura( "Base de Datos", "INF2243-1" ); colegio.inscribirCursoAlumno( "20.522.213-8", asignatura );
                    nota = new Nota( "Control 1", 7 ); colegio.agregarNotaAlumno( "20.522.213-8", "INF2241-1", nota); nota = new Nota( "Control 2", 5.5 ); colegio.agregarNotaAlumno( "20.522.213-8", "INF2241-1", nota);
                    nota = new Nota( "Control 1", 7 ); colegio.agregarNotaAlumno( "20.522.213-8", "EST2168-2", nota); nota = new Nota( "Prueba 1", 6.5 ); colegio.agregarNotaAlumno( "20.522.213-8", "EST2168-2", nota);
                    nota = new Nota( "Control 1", 4.5 ); colegio.agregarNotaAlumno( "20.522.213-8", "INF2243-1", nota); nota = new Nota( "Prueba 1", 5.5 ); colegio.agregarNotaAlumno( "20.522.213-8", "INF2243-1", nota);
                    if ( !colegio.verificarUsuario( "20.522.213-8" ) ) {
                        usuario = new Usuario( "beiache", "Bastián Caleb Sepúlveda Silva", "20.522.213-8", 20, "ProyectoAulaVirtual2021", 2 ); colegio.registrarUsuario( usuario );
                    }
                    aux++;
                }    
                if ( !colegio.verificarAlumno( "20.731.271-1" ) ) {
                    alumno = new Alumno( "Kevin Nicholas Luksic Lucero", "20.731.271-1", 20 ); colegio.agregarAlumno( alumno );
                    asignatura = new Asignatura( "Programación Orientada a Objetos", "INF2241-1" ); colegio.inscribirCursoAlumno( "20.731.271-1", asignatura );
                    asignatura = new Asignatura( "Fundamentos de Probabilidad", "EST2168-2" ); colegio.inscribirCursoAlumno( "20.731.271-1", asignatura );
                    asignatura = new Asignatura( "Base de Datos", "INF2243-1" ); colegio.inscribirCursoAlumno( "20.731.271-1", asignatura );
                    nota = new Nota( "Control 1", 7 ); colegio.agregarNotaAlumno( "20.731.271-1", "INF2241-1", nota); nota = new Nota( "Control 2", 7 ); colegio.agregarNotaAlumno( "20.731.271-1", "INF2241-1", nota);
                    nota = new Nota( "Control 1", 4.5 ); colegio.agregarNotaAlumno( "20.731.271-1", "EST2168-2", nota); nota = new Nota( "Prueba 1", 5 ); colegio.agregarNotaAlumno( "20.731.271-1", "EST2168-2", nota);
                    nota = new Nota( "Control 1", 1 ); colegio.agregarNotaAlumno( "20.731.271-1", "INF2243-1", nota); nota = new Nota( "Prueba 1", 6 ); colegio.agregarNotaAlumno( "20.731.271-1", "INF2243-1", nota);
                    if ( !colegio.verificarUsuario( "20.731.271-1" ) ) {
                        usuario = new Usuario( "qbnzietve", "Kevin Nicholas Luksic Lucero", "20.731.271-1", 20, "ProyectoAulaVirtual2021", 4 ); colegio.registrarUsuario( usuario );
                    }
                    aux++;
                }
                if ( !colegio.verificarAlumno( "20.150.642-9" ) ) {
                    alumno = new Alumno( "Marcelo Ignacio Azocar Madrid", "20.150.642-9", 21 ); colegio.agregarAlumno( alumno );
                    asignatura = new Asignatura( "Programación Orientada a Objetos", "INF2241-1" ); colegio.inscribirCursoAlumno( "20.150.642-9", asignatura );
                    asignatura = new Asignatura( "Fundamentos de Probabilidad", "EST2168-2" ); colegio.inscribirCursoAlumno( "20.150.642-9", asignatura );
                    asignatura = new Asignatura( "Base de Datos", "INF2243-1" ); colegio.inscribirCursoAlumno( "20.150.642-9", asignatura );
                    nota = new Nota( "Control 1", 7 ); colegio.agregarNotaAlumno( "20.150.642-9", "INF2241-1", nota); nota = new Nota( "Control 2", 1 ); colegio.agregarNotaAlumno( "20.150.642-9", "INF2241-1", nota);
                    nota = new Nota( "Control 1", 1 ); colegio.agregarNotaAlumno( "20.150.642-9", "EST2168-2", nota); nota = new Nota( "Prueba 1", 3 ); colegio.agregarNotaAlumno( "20.150.642-9", "EST2168-2", nota);
                    nota = new Nota( "Control 1", 4 ); colegio.agregarNotaAlumno( "20.150.642-9", "INF2243-1", nota); nota = new Nota( "Prueba 1", 7 ); colegio.agregarNotaAlumno( "20.150.642-9", "INF2243-1", nota);
                    if ( !colegio.verificarUsuario( "20.150.642-9" ) ) {
                        usuario = new Usuario( "Marce", "Marcelo Ignacio Azocar Madrid", "20.150.642-9", 21, "ProyectoAulaVirtual2021", 3 ); colegio.registrarUsuario( usuario );
                    }
                    aux++;
                }
                if ( !colegio.verificarProfesor( "20.522.213-8" ) ) {
                    profesor = new Profesor( "Bastián Caleb Sepúlveda Silva", "20.522.213-8", 20 ); colegio.agregarProfesor( profesor );
                    asignatura = new Asignatura( "Programación Orientada a Objetos", "INF2241-1" ); colegio.inscribirCursoProfesor( "20.522.213-8", asignatura );
                    aux++;
                }
                if ( !colegio.verificarProfesor( "20.731.271-1" ) ) {
                    profesor = new Profesor( "Kevin Nicholas Luksic Lucero", "20.731.271-1", 20 ); colegio.agregarProfesor( profesor );
                    asignatura = new Asignatura( "Fundamentos de Probabilidad", "EST2168-2" ); colegio.inscribirCursoProfesor( "20.731.271-1", asignatura );
                    aux++;
                }
                if ( !colegio.verificarProfesor( "20.150.642-9" ) ) {
                    profesor = new Profesor( "Marcelo Ignacio Azocar Madrid", "20.150.642-9", 21 ); colegio.agregarProfesor( profesor );
                    asignatura = new Asignatura( "Base de Datos", "INF2243-1" ); colegio.inscribirCursoProfesor( "20.150.642-9", asignatura );
                    aux++;
                }
                if ( aux > 0 ) {
                    JOptionPane.showMessageDialog( null, "VALORES DE PRUEBA DESBLOQUEADOS CON ÉXITO." );
                } else {
                    JOptionPane.showMessageDialog( null, "ERROR AL DESBLOQUEAR LOS VALORES DE PRUEBA.\nLOS VALORES DE PRUEBA YA SE ENCUENTRAN DESBLOQUEADOS." );
                }
                break;
                
            case "2":
                while ( !volver ) {
                    iterar = true;
                    rut = JOptionPane.showInputDialog( null, "INGRESE EL RUT DEL ALUMNO:" );
                    if ( !colegio.verificarAlumno( rut ) ) {
                        nombre = JOptionPane.showInputDialog( null, "INGRESE EL NOMBRE DEL ALUMNO:" );
                        while ( iterar ) {
                            ingresado = JOptionPane.showInputDialog( null, "INGRESE LA EDAD DEL ALUMNO:" );
                            if ( colegio.esNumero( ingresado ) ) {
                                edad = ( int ) Double.parseDouble( ingresado );
                                iterar = false;
                            } else {
                                JOptionPane.showMessageDialog( null, "ERROR AL REGISTRAR LA EDAD DEL ALUMNO.\nEL VALOR INGRESADO NO ES VÁLIDO, INTENTE NUEVAMENTE." );
                            }
                        }
                        alumno = new Alumno( nombre, rut, edad );
                        colegio.agregarAlumno( alumno );
                        if ( JOptionPane.showConfirmDialog( null, "¿DESEA REGISTRAR OTRO ALUMNO EN EL SISTEMA?" ) == 1 ) {
                            volver = true;
                        }
                    } else {
                        JOptionPane.showMessageDialog( null, "ERROR AL REGISTRAR ALUMNO.\nEL RUT INGRESADO YA SE ENCUENTRA ASOCIADO A OTRO ALUMNO." );
                        if ( JOptionPane.showConfirmDialog( null, "¿DESEA REGISTRAR OTRO ALUMNO EN EL SISTEMA?" ) == 1 ) {
                            volver = true;
                        }
                    }
                }
                break;
                
            case "3":
                while ( !volver ) {
                    iterar = true;
                    rut = JOptionPane.showInputDialog( null, "INGRESE EL RUT DEL PROFESOR:" );
                    if ( !colegio.verificarAlumno( rut ) ) {
                        nombre = JOptionPane.showInputDialog( null, "INGRESE EL NOMBRE DEL PROFESOR:" );
                        while ( iterar ) {
                            ingresado = JOptionPane.showInputDialog( null, "INGRESE LA EDAD DEL PROFESOR:" );
                            if ( colegio.esNumero( ingresado ) ) {
                                edad = ( int ) Double.parseDouble( ingresado );
                                iterar = false;
                            } else {
                                JOptionPane.showMessageDialog( null, "ERROR AL REGISTRAR LA EDAD DEL PROFESOR.\nEL VALOR INGRESADO NO ES VÁLIDO, INTENTE NUEVAMENTE." );
                            }
                        }
                        profesor = new Profesor( nombre, rut, edad );
                        colegio.agregarProfesor( profesor );
                        if ( JOptionPane.showConfirmDialog( null, "¿DESEA REGISTRAR OTRO PROFESOR EN EL SISTEMA?" ) == 1 ) {
                            volver = true;
                        }
                    } else {
                        JOptionPane.showMessageDialog( null, "ERROR AL REGISTRAR PROFESOR.\nEL RUT INGRESADO YA SE ENCUENTRA ASOCIADO A OTRO PROFESOR." );
                        if ( JOptionPane.showConfirmDialog( null, "¿DESEA REGISTRAR OTRO PROFESOR EN EL SISTEMA?" ) == 1 ) {
                            volver = true;
                        }
                    }
                }
                break;
                
            case "4":
                break;
            
            case "5":
                break;
            
            case "6":
                if ( colegio.hayAlumnos() ) {
                    JOptionPane.showMessageDialog( null, "\nERROR AL MOSTRAR ALUMNOS.\nNO HAY NINGÚN ALUMNO REGISTRADO EN EL SISTEMA." );
                } else {
                    colegio.mostrarAlumnos();
                }
                break;
                
            case "7":
                if ( colegio.hayProfesores() ) {
                    JOptionPane.showMessageDialog( null, "\nERROR AL MOSTRAR PROFESORES.\nNO HAY NINGÚN PROFESOR REGISTRADO EN EL SISTEMA." );
                } else {
                    colegio.mostrarProfesores();
                }
                break;
                
            case "10":
                if ( colegio.hayAlumnos() ) {
                    JOptionPane.showMessageDialog( null, "ERROR AL CONSULTAR ALUMNO.\nNO HAY NINGÚN ALUMNO REGISTRADO." );
                } else {
                    rut = JOptionPane.showInputDialog( null, "INGRESE EL RUT DEL ALUMNO QUE DESEA CONSULTAR:" );
                    colegio.consultarAlumno( rut );
                }
                break;
                
            case "11":
                if ( colegio.hayProfesores() ) {
                    JOptionPane.showMessageDialog( null, "ERROR AL CONSULTAR PROFESOR.\nNO HAY NINGÚN PROFESOR REGISTRADO." );
                } else {
                    rut = JOptionPane.showInputDialog( null, "INGRESE EL RUT DEL PROFESOR QUE DESEA CONSULTAR:" );
                    colegio.consultarProfesor( rut );
                }
                break;
                
            case "0":
                if ( JOptionPane.showConfirmDialog( null, "¿DESEA VOLVER AL MENÚ PRINCIPAL?\nADVERTENCIA: LOS DATOS INGRESADOS NO SE GUARDARÁN." ) == 0 ) {
                    menu.setVisible( true );
                    this.setVisible( false );
                }
                break;
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MenuAdministrador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MenuAdministrador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MenuAdministrador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MenuAdministrador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MenuAdministrador().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
