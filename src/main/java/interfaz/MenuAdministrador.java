package interfaz;

import java.io.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

public class MenuAdministrador extends javax.swing.JFrame {
    
    private Colegio colegio = new Colegio();
    private Usuario usuario;
    private Persona alumno;
    private Apoderado apoderado;
    private Persona profesor;
    private Asignatura asignatura;
    private Nota nota;
    
    private String rut;
    private String nombre;
    private String ingresado;
    private int edad;
    private String clave;
    private double valorNota, valorNota2;
    private String evaluacion;
    
    private boolean volver = false;
    private boolean iterar = true;
    
    public MenuAdministrador() {
        initComponents();
        this.setLocationRelativeTo( null );
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        jLabel22 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("AULA VIRTUAL");
        jLabel1.setAlignmentY(0.0F);

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel2.setText("1. Desbloquear valores de prueba");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel3.setText("2. Registrar alumno");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel4.setText("3. Registrar profesor");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel5.setText("4. Inscribir curso alumno");

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel6.setText("5. Inscribir curso profesor");

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel7.setText("6. Mostrar alumnos");

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel8.setText("7. Mostrar profesores");

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel9.setText("8. Mostrar cursos alumno");

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel10.setText("9. Mostrar cursos profesor");

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel11.setText("10. Consultar alumno");

        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel12.setText("11. Consultar profesor");

        jLabel13.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel13.setText("12. Consultar curso");

        jLabel14.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel14.setText("13. Modificar curso alumno");

        jLabel15.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel15.setText("14. Modificar curso profesor");

        jLabel16.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel16.setText("15. Ingresar nota alumno");

        jLabel17.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel17.setText("16. Revisar situación académica");

        jLabel18.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel18.setText("17. Eliminar alumno");

        jLabel19.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel19.setText("18. Eliminar profesor");

        jLabel20.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel20.setText("0. Volver");

        jButton1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton1.setText("OK");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jTextField1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        jLabel22.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel22.setText("Ingrese la opción que desea realizar:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6)
                            .addComponent(jLabel7)
                            .addComponent(jLabel10)
                            .addComponent(jLabel11)
                            .addComponent(jLabel12)
                            .addComponent(jLabel13)
                            .addComponent(jLabel14)
                            .addComponent(jLabel15)
                            .addComponent(jLabel16)
                            .addComponent(jLabel17)
                            .addComponent(jLabel18)
                            .addComponent(jLabel19)
                            .addComponent(jLabel20)
                            .addComponent(jLabel8)
                            .addComponent(jLabel9))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jTextField1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel22))
                        .addGap(0, 0, Short.MAX_VALUE))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(223, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 254, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(223, 223, 223))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel12)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel13)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel14)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel15)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel16)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel17)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel18)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel19)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel20)
                .addGap(26, 26, 26)
                .addComponent(jLabel22)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(20, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        MenuPrincipal menu = new MenuPrincipal();
        int aux = 0;
        String opcion = jTextField1.getText();
        
        switch ( opcion ) {
            case "1":
                if ( !colegio.verificarAlumno( "20.522.213-8" ) ) {
                    alumno = new Alumno( "Bastián Caleb Sepúlveda Silva", "20.522.213-8", 20 ); colegio.agregarAlumno( alumno );
                    asignatura = new Asignatura( "Programación Orientada a Objetos", "INF2241-1" ); colegio.inscribirCursoAlumno( "20.522.213-8", asignatura );
                    asignatura = new Asignatura( "Fundamentos de Probabilidad", "EST2168-2" ); colegio.inscribirCursoAlumno( "20.522.213-8", asignatura );
                    asignatura = new Asignatura( "Base de Datos", "INF2243-1" ); colegio.inscribirCursoAlumno( "20.522.213-8", asignatura );
                    nota = new Nota( "Control 1", 7 ); colegio.agregarNotaAlumno( "20.522.213-8", "INF2241-1", nota); nota = new Nota( "Control 2", 5.5 ); colegio.agregarNotaAlumno( "20.522.213-8", "INF2241-1", nota);
                    nota = new Nota( "Control 1", 7 ); colegio.agregarNotaAlumno( "20.522.213-8", "EST2168-2", nota); nota = new Nota( "Prueba 1", 6.5 ); colegio.agregarNotaAlumno( "20.522.213-8", "EST2168-2", nota);
                    nota = new Nota( "Control 1", 4.5 ); colegio.agregarNotaAlumno( "20.522.213-8", "INF2243-1", nota); nota = new Nota( "Prueba 1", 5.5 ); colegio.agregarNotaAlumno( "20.522.213-8", "INF2243-1", nota);
                    if ( !colegio.verificarUsuario( "20.522.213-8" ) ) {
                        usuario = new Usuario( "beiache", "Bastián Caleb Sepúlveda Silva", "20.522.213-8", 20, "ProyectoAulaVirtual2021", 2 ); colegio.registrarUsuario( usuario );
                    }
                    aux++;
                }    
                if ( !colegio.verificarAlumno( "20.731.271-1" ) ) {
                    alumno = new Alumno( "Kevin Nicholas Luksic Lucero", "20.731.271-1", 20 ); colegio.agregarAlumno( alumno );
                    asignatura = new Asignatura( "Programación Orientada a Objetos", "INF2241-1" ); colegio.inscribirCursoAlumno( "20.731.271-1", asignatura );
                    asignatura = new Asignatura( "Fundamentos de Probabilidad", "EST2168-2" ); colegio.inscribirCursoAlumno( "20.731.271-1", asignatura );
                    asignatura = new Asignatura( "Base de Datos", "INF2243-1" ); colegio.inscribirCursoAlumno( "20.731.271-1", asignatura );
                    nota = new Nota( "Control 1", 7 ); colegio.agregarNotaAlumno( "20.731.271-1", "INF2241-1", nota); nota = new Nota( "Control 2", 7 ); colegio.agregarNotaAlumno( "20.731.271-1", "INF2241-1", nota);
                    nota = new Nota( "Control 1", 4.5 ); colegio.agregarNotaAlumno( "20.731.271-1", "EST2168-2", nota); nota = new Nota( "Prueba 1", 5 ); colegio.agregarNotaAlumno( "20.731.271-1", "EST2168-2", nota);
                    nota = new Nota( "Control 1", 1 ); colegio.agregarNotaAlumno( "20.731.271-1", "INF2243-1", nota); nota = new Nota( "Prueba 1", 6 ); colegio.agregarNotaAlumno( "20.731.271-1", "INF2243-1", nota);
                    if ( !colegio.verificarUsuario( "20.731.271-1" ) ) {
                        usuario = new Usuario( "qbnzietve", "Kevin Nicholas Luksic Lucero", "20.731.271-1", 20, "ProyectoAulaVirtual2021", 4 ); colegio.registrarUsuario( usuario );
                    }
                    aux++;
                }
                if ( !colegio.verificarAlumno( "20.150.642-9" ) ) {
                    alumno = new Alumno( "Marcelo Ignacio Azocar Madrid", "20.150.642-9", 21 ); colegio.agregarAlumno( alumno );
                    asignatura = new Asignatura( "Programación Orientada a Objetos", "INF2241-1" ); colegio.inscribirCursoAlumno( "20.150.642-9", asignatura );
                    asignatura = new Asignatura( "Fundamentos de Probabilidad", "EST2168-2" ); colegio.inscribirCursoAlumno( "20.150.642-9", asignatura );
                    asignatura = new Asignatura( "Base de Datos", "INF2243-1" ); colegio.inscribirCursoAlumno( "20.150.642-9", asignatura );
                    nota = new Nota( "Control 1", 7 ); colegio.agregarNotaAlumno( "20.150.642-9", "INF2241-1", nota); nota = new Nota( "Control 2", 1 ); colegio.agregarNotaAlumno( "20.150.642-9", "INF2241-1", nota);
                    nota = new Nota( "Control 1", 1 ); colegio.agregarNotaAlumno( "20.150.642-9", "EST2168-2", nota); nota = new Nota( "Prueba 1", 3 ); colegio.agregarNotaAlumno( "20.150.642-9", "EST2168-2", nota);
                    nota = new Nota( "Control 1", 4 ); colegio.agregarNotaAlumno( "20.150.642-9", "INF2243-1", nota); nota = new Nota( "Prueba 1", 7 ); colegio.agregarNotaAlumno( "20.150.642-9", "INF2243-1", nota);
                    if ( !colegio.verificarUsuario( "20.150.642-9" ) ) {
                        usuario = new Usuario( "Marce", "Marcelo Ignacio Azocar Madrid", "20.150.642-9", 21, "ProyectoAulaVirtual2021", 3 ); colegio.registrarUsuario( usuario );
                    }
                    aux++;
                }
                if ( !colegio.verificarProfesor( "20.522.213-8" ) ) {
                    profesor = new Profesor( "Bastián Caleb Sepúlveda Silva", "20.522.213-8", 20 ); colegio.agregarProfesor( profesor );
                    asignatura = new Asignatura( "Programación Orientada a Objetos", "INF2241-1" ); colegio.inscribirCursoProfesor( "20.522.213-8", asignatura );
                    aux++;
                }
                if ( !colegio.verificarProfesor( "20.731.271-1" ) ) {
                    profesor = new Profesor( "Kevin Nicholas Luksic Lucero", "20.731.271-1", 20 ); colegio.agregarProfesor( profesor );
                    asignatura = new Asignatura( "Fundamentos de Probabilidad", "EST2168-2" ); colegio.inscribirCursoProfesor( "20.731.271-1", asignatura );
                    aux++;
                }
                if ( !colegio.verificarProfesor( "20.150.642-9" ) ) {
                    profesor = new Profesor( "Marcelo Ignacio Azocar Madrid", "20.150.642-9", 21 ); colegio.agregarProfesor( profesor );
                    asignatura = new Asignatura( "Base de Datos", "INF2243-1" ); colegio.inscribirCursoProfesor( "20.150.642-9", asignatura );
                    aux++;
                }
                //if ( aux > 0 ) {
                    JOptionPane.showMessageDialog( null, "VALORES DE PRUEBA DESBLOQUEADOS CON ÉXITO." );
                /*} else {
                    JOptionPane.showMessageDialog( null, "ERROR AL DESBLOQUEAR LOS VALORES DE PRUEBA.\nLOS VALORES DE PRUEBA YA SE ENCUENTRAN DESBLOQUEADOS." );
                }*/
                break;
                
            case "2":
                while ( !volver ) {
                    iterar = true;
                    rut = JOptionPane.showInputDialog( null, "INGRESE EL RUT DEL ALUMNO:" );
                    if ( !colegio.verificarAlumno( rut ) ) {
                        nombre = JOptionPane.showInputDialog( null, "INGRESE EL NOMBRE DEL ALUMNO:" );
                        while ( iterar ) {
                            ingresado = JOptionPane.showInputDialog( null, "INGRESE LA EDAD DEL ALUMNO:" );
                            if ( colegio.esNumero( ingresado ) ) {
                                edad = ( int ) Double.parseDouble( ingresado );
                                iterar = false;
                            } else {
                                JOptionPane.showMessageDialog( null, "ERROR AL REGISTRAR LA EDAD DEL ALUMNO.\nEL VALOR INGRESADO NO ES VÁLIDO, INTENTE NUEVAMENTE." );
                            }
                        }
                        alumno = new Alumno( nombre, rut, edad );
                        colegio.agregarAlumno( alumno );
                        if ( JOptionPane.showConfirmDialog( null, "¿DESEA REGISTRAR OTRO ALUMNO EN EL SISTEMA?" ) == 1 ) {
                            volver = true;
                        }
                    } else {
                        JOptionPane.showMessageDialog( null, "ERROR AL REGISTRAR ALUMNO.\nEL RUT INGRESADO YA SE ENCUENTRA ASOCIADO A OTRO ALUMNO." );
                        if ( JOptionPane.showConfirmDialog( null, "¿DESEA REGISTRAR OTRO ALUMNO EN EL SISTEMA?" ) == 1 ) {
                            volver = true;
                        }
                    }
                }
                break;
                
            case "3":
                while ( !volver ) {
                    iterar = true;
                    rut = JOptionPane.showInputDialog( null, "INGRESE EL RUT DEL PROFESOR:" );
                    if ( !colegio.verificarAlumno( rut ) ) {
                        nombre = JOptionPane.showInputDialog( null, "INGRESE EL NOMBRE DEL PROFESOR:" );
                        while ( iterar ) {
                            ingresado = JOptionPane.showInputDialog( null, "INGRESE LA EDAD DEL PROFESOR:" );
                            if ( colegio.esNumero( ingresado ) ) {
                                edad = ( int ) Double.parseDouble( ingresado );
                                iterar = false;
                            } else {
                                JOptionPane.showMessageDialog( null, "ERROR AL REGISTRAR LA EDAD DEL PROFESOR.\nEL VALOR INGRESADO NO ES VÁLIDO, INTENTE NUEVAMENTE." );
                            }
                        }
                        profesor = new Profesor( nombre, rut, edad );
                        colegio.agregarProfesor( profesor );
                        if ( JOptionPane.showConfirmDialog( null, "¿DESEA REGISTRAR OTRO PROFESOR EN EL SISTEMA?" ) == 1 ) {
                            volver = true;
                        }
                    } else {
                        JOptionPane.showMessageDialog( null, "ERROR AL REGISTRAR PROFESOR.\nEL RUT INGRESADO YA SE ENCUENTRA ASOCIADO A OTRO PROFESOR." );
                        if ( JOptionPane.showConfirmDialog( null, "¿DESEA REGISTRAR OTRO PROFESOR EN EL SISTEMA?" ) == 1 ) {
                            volver = true;
                        }
                    }
                }
                break;
                
            case "4":
                if ( colegio.hayAlumnos() ) {
                    JOptionPane.showMessageDialog( null, "ERROR AL INSCRIBIR AL ALUMNO EN UN CURSO. NO HAY NINGÚN ALUMNO REGISTRADO EN EL SISTEMA." );
                } else {
                    rut = JOptionPane.showInputDialog( null, "INGRESE EL RUT DEL ALUMNO AL QUE DESEA INSCRIBIR EN UN CURSO:" );
                    if ( colegio.verificarAlumno( rut ) ) {
                        while ( !volver ) {
                            iterar = true;
                            clave = JOptionPane.showInputDialog( null, "INGRESE LA CLAVE DEL CURSO:" );
                            if ( !colegio.verificarCursoAlumno( rut, clave ) ) {
                                nombre = JOptionPane.showInputDialog( null, "INGRESE EL NOMBRE DEL CURSO:" );
                                asignatura = new Asignatura( nombre, clave );
                                colegio.inscribirCursoAlumno( rut, asignatura );
                                while ( iterar ) {
                                    if ( JOptionPane.showConfirmDialog( null, "¿DESEA INSCRIBIR OTRO CURSO PARA ESTE ALUMNO?" ) == 1 ) {
                                        volver = true;
                                        iterar = false;
                                    } else {
                                        iterar = false;
                                    }
                                }
                            } else {
                                JOptionPane.showMessageDialog( null, "ERROR AL INSCRIBIR AL ALUMNO EN UN CURSO.\nLA CLAVE INGRESADA YA ESTÁ ASOCIADA A OTRO CURSO DEL MISMO ALUMNO." );
                                while ( iterar ) {
                                    if ( JOptionPane.showConfirmDialog( null, "¿DESEA INSCRIBIR OTRO CURSO PARA ESTE ALUMNO?" ) == 1 ) {
                                        volver = true;
                                        iterar = false;
                                    } else {
                                        iterar = false;
                                    }
                                }
                            }
                        }
                    } else {
                        JOptionPane.showMessageDialog( null, "ERROR AL INSCRIBIR AL ALUMNO EN UN CURSO.\nEL RUT INGRESADO NO SE CORRESPONDE CON EL DE NINGÚN ALUMNO." );
                    }
                }
                break;
            
            case "5":
                if ( colegio.hayProfesores() ) {
                    JOptionPane.showMessageDialog( null, "ERROR AL INSCRIBIR AL PROFESOR EN UN CURSO. NO HAY NINGÚN PROFESOR REGISTRADO EN EL SISTEMA." );
                } else {
                    rut = JOptionPane.showInputDialog( null, "INGRESE EL RUT DEL PROFESOR AL QUE DESEA INSCRIBIR EN UN CURSO:" );
                    if ( colegio.verificarProfesor( rut ) ) {
                        while ( !volver ) {
                            iterar = true;
                            clave = JOptionPane.showInputDialog( null, "INGRESE LA CLAVE DEL CURSO:" );
                            if ( !colegio.verificarCursoProfesor( rut, clave ) ) {
                                nombre = JOptionPane.showInputDialog( null, "INGRESE EL NOMBRE DEL CURSO:" );
                                asignatura = new Asignatura( nombre, clave );
                                colegio.inscribirCursoProfesor( rut, asignatura );
                                while ( iterar ) {
                                    if ( JOptionPane.showConfirmDialog( null, "¿DESEA INSCRIBIR OTRO CURSO PARA ESTE PROFESOR?" ) == 1 ) {
                                        volver = true;
                                        iterar = false;
                                    } else {
                                        iterar = false;
                                    }
                                }
                            } else {
                                JOptionPane.showMessageDialog( null, "ERROR AL INSCRIBIR AL PROFESOR EN UN CURSO.\nLA CLAVE INGRESADA YA ESTÁ ASOCIADA A OTRO CURSO DEL MISMO PROFESOR." );
                                while ( iterar ) {
                                    if ( JOptionPane.showConfirmDialog( null, "¿DESEA INSCRIBIR OTRO CURSO PARA ESTE PROFESOR?" ) == 1 ) {
                                        volver = true;
                                        iterar = false;
                                    } else {
                                        iterar = false;
                                    }
                                }
                            }
                        }
                    } else {
                        JOptionPane.showMessageDialog( null, "ERROR AL INSCRIBIR AL PROFESOR EN UN CURSO.\nEL RUT INGRESADO NO SE CORRESPONDE CON EL DE NINGÚN PROFESOR." );
                    }
                }
                break;
            
            case "6":
                if ( colegio.hayAlumnos() ) {
                    JOptionPane.showMessageDialog( null, "ERROR AL MOSTRAR ALUMNOS.\nNO HAY NINGÚN ALUMNO REGISTRADO EN EL SISTEMA." );
                } else {
                    colegio.mostrarAlumnosVentana();
                }
                break;
                
            case "7":
                if ( colegio.hayProfesores() ) {
                    JOptionPane.showMessageDialog( null, "ERROR AL MOSTRAR PROFESORES.\nNO HAY NINGÚN PROFESOR REGISTRADO EN EL SISTEMA." );
                } else {
                    colegio.mostrarProfesoresVentana();
                }
                break;
                
            case "8":
                if ( colegio.hayAlumnos() ) {
                    JOptionPane.showMessageDialog( null, "ERROR AL MOSTRAR CURSOS DEL ALUMNO.\nNO HAY NINGÚN ALUMNO REGISTRADO." );
                } else {
                    rut = JOptionPane.showInputDialog( null, "INGRESE EL RUT DEL ALUMNO CUYOS CURSOS DESEA MOSTRAR:" );
                    colegio.mostrarCursosAlumnoVentana( rut );
                }
                break;
                
            case "9":
                if ( colegio.hayProfesores() ) {
                    JOptionPane.showMessageDialog( null, "ERROR AL MOSTRAR CURSOS DEL PROFESOR.\nNO HAY NINGÚN PROFESOR REGISTRADO." );
                } else {
                    rut = JOptionPane.showInputDialog( null, "INGRESE EL RUT DEL PROFESOR CUYOS CURSOS DESEA MOSTRAR:" );
                    colegio.mostrarCursosProfesorVentana( rut );
                }
                break;
                
            case "10":
                if ( colegio.hayAlumnos() ) {
                    JOptionPane.showMessageDialog( null, "ERROR AL CONSULTAR ALUMNO.\nNO HAY NINGÚN ALUMNO REGISTRADO." );
                } else {
                    rut = JOptionPane.showInputDialog( null, "INGRESE EL RUT DEL ALUMNO QUE DESEA CONSULTAR:" );
                    colegio.consultarAlumnoVentana( rut );
                }
                break;
                
            case "11":
                if ( colegio.hayProfesores() ) {
                    JOptionPane.showMessageDialog( null, "ERROR AL CONSULTAR PROFESOR.\nNO HAY NINGÚN PROFESOR REGISTRADO." );
                } else {
                    rut = JOptionPane.showInputDialog( null, "INGRESE EL RUT DEL PROFESOR QUE DESEA CONSULTAR:" );
                    colegio.consultarProfesorVentana( rut );
                }
                break;
                
            case "12":
                if ( asignatura == null ) {
                            JOptionPane.showMessageDialog( null, "ERROR AL CONSULTAR CURSO.\nNO HAY NINGÚN CURSO REGISTRADO EN EL SISTEMA." );
                        } else {
                            clave = JOptionPane.showInputDialog( null, "INGRESE LA CLAVE DEL CURSO QUE DESEA CONSULTAR: " );
                            colegio.consultarCurso( clave );
                            this.setVisible( false );
                            JOptionPane.showMessageDialog( null, "EL MENÚ NECESARIO PARA SEGUIR TRABAJANDO SERÁ IMPRESO EN CONSOLA.\nPOR FAVOR, NO CIERRE ESTA VENTANA O CUALQUIER VENTANA SIGUIENTE PARA PODER INTERACTUAR CON ELLAS MÁS TARDE." );
                            while ( !volver ) {
                                iterar = true;
                                System.out.println( "\n ----------------------------------------------------------------------" );
                                System.out.println( "|    ¿QUÉ OPERACIÓN DESEA REALIZAR A CONTINUACIÓN SOBRE ESTE CURSO?    |");
                                System.out.println( " ----------------------------------------------------------------------" );
                                System.out.println( "|  1. MOSTRAR ALUMNOS SOBRE EL PROMEDIO                                |" );
                                System.out.println( "|  2. MOSTRAR ALUMNOS BAJO EL PROMEDIO                                 |");
                                System.out.println( "|  3. MOSTRAR ALUMNOS EN EL PROMEDIO                                   |");
                                System.out.println( "|  4. MOSTRAR ALUMNOS CON UN PROMEDIO POR ENCIMA DE UN VALOR DADO      |");
                                System.out.println( "|  5. MOSTRAR ALUMNOS CON UN PROMEDIO POR DEBAJO DE UN VALOR DADO      |");
                                System.out.println( "|  6. MOSTRAR ALUMNOS CON UN PROMEDIO ENTRE UN RANGO DADO              |");
                                System.out.println( "|  7. MOSTRAR ALUMNOS EN SITUACIÓN DE REPITENCIA                       |");
                                System.out.println( "|  8. MOSTRAR ALUMNOS SIN NOTAS REGISTRADAS                            |");
                                System.out.println( "|  0. VOLVER                                                           |");
                                System.out.println( " ----------------------------------------------------------------------" );
                                opcion = JOptionPane.showInputDialog( null, "INGRESE LA OPCIÓN QUE DESEA REALIZAR: " );
                                
                                switch( opcion ) {
                                    case "1":
                                        colegio.mostrarAlumnosSobrePromedio( clave );
                                        break;
                                        
                                    case "2":
                                        colegio.mostrarAlumnosBajoPromedio( clave );
                                        break;
                                        
                                    case "3":
                                        colegio.mostrarAlumnosEnElPromedio( clave );
                                        break;
                                        
                                    case "4":
                                        while ( iterar ) {
                                            ingresado = JOptionPane.showInputDialog( null, "INGRESE EL VALOR SOBRE EL CUAL SE DEBEN ENCONTRAR LOS PROMEDIOS\n(ADVERTENCIA: EL VALOR INGRESADO SE DEBE ENCONTRAR ENTRE 1 Y 6.9): " );
                                            if ( colegio.esNumero( ingresado ) ) {
                                                valorNota = Math.round( Double.parseDouble( ingresado ) * 10 ) / 10d;
                                                if ( valorNota > 6.9 ) {
                                                    JOptionPane.showMessageDialog( null, "ERROR AL EVALUAR PROMEDIOS.\nEL VALOR INGRESADO EXCEDE EL MÁXIMO ACEPTADO, INTENTE NUEVAMENTE." );
                                                } else {
                                                    if ( valorNota < 1 ) {
                                                        JOptionPane.showMessageDialog( null, "ERROR AL EVALUAR PROMEDIOS.\nEL VALOR INGRESADO ESTÁ POR DEBAJO DEL MÍNIMO ACEPTADO, INTENTE NUEVAMENTE." );
                                                    } else {
                                                        iterar = false;
                                                    }
                                                }
                                            } else {
                                                JOptionPane.showMessageDialog( null, "ERROR AL EVALUAR PROMEDIOS.\nEL VALOR INGRESADO NO ES VÁLIDO, INTENTE NUEVAMENTE." );
                                            }
                                        }
                                        colegio.mostrarAlumnosSobreValor( clave, valorNota );
                                        break;
                                        
                                    case "5":
                                        while ( iterar ) {
                                            ingresado = JOptionPane.showInputDialog( null, "INGRESE EL VALOR BAJO EL CUAL SE DEBEN ENCONTRAR LOS PROMEDIOS\n(ADVERTENCIA: EL VALOR INGRESADO SE DEBE ENCONTRAR ENTRE 1.1 Y 7): " );
                                            if ( colegio.esNumero( ingresado ) ) {
                                                valorNota = Math.round( Double.parseDouble( ingresado ) * 10 ) / 10d;
                                                if ( valorNota > 7 ) {
                                                    JOptionPane.showMessageDialog( null, "ERROR AL EVALUAR PROMEDIOS.\nEL VALOR INGRESADO EXCEDE EL MÁXIMO ACEPTADO, INTENTE NUEVAMENTE." );
                                                } else {
                                                    if ( valorNota < 1.1 ) {
                                                        JOptionPane.showMessageDialog( null, "ERROR AL EVALUAR PROMEDIOS.\nEL VALOR INGRESADO ESTÁ POR DEBAJO DEL MÍNIMO ACEPTADO, INTENTE NUEVAMENTE." );
                                                    } else {
                                                        iterar = false;
                                                    }
                                                }
                                            } else {
                                                JOptionPane.showMessageDialog( null, "ERROR AL EVALUAR PROMEDIOS.\nEL VALOR INGRESADO NO ES VÁLIDO, INTENTE NUEVAMENTE." );
                                            }
                                        }
                                        colegio.mostrarAlumnosBajoValor( clave, valorNota );
                                        break;
                                        
                                    case "6":
                                        while ( iterar ) {
                                            ingresado = JOptionPane.showInputDialog( null, "INGRESE LOS VALORES ENTRE LOS CUALES SE DEBEN ENCONTRAR LOS PROMEDIOS\n(ADVERTENCIA: LOS VALORES INGRESADOS SE DEBEN ENCONTRAR ENTRE 1 Y 7, Y NO PUEDEN REPETIRSE):\nVALOR 1:" );
                                            if ( colegio.esNumero( ingresado ) ) {
                                                valorNota = Math.round( Double.parseDouble( ingresado ) * 10 ) / 10d;
                                                if ( valorNota > 7 ) {
                                                    JOptionPane.showMessageDialog( null, "ERROR AL EVALUAR PROMEDIOS.\nEL VALOR INGRESADO EXCEDE EL MÁXIMO ACEPTADO, INTENTE NUEVAMENTE." );
                                                } else {
                                                    if ( valorNota < 1 ) {
                                                        JOptionPane.showMessageDialog( null, "ERROR AL EVALUAR PROMEDIOS.\nEL VALOR INGRESADO ESTÁ POR DEBAJO DEL MÍNIMO ACEPTADO, INTENTE NUEVAMENTE." );
                                                    } else {
                                                        iterar = false;
                                                    }
                                                }
                                            } else {
                                                JOptionPane.showMessageDialog( null, "ERROR AL EVALUAR PROMEDIOS.\nEL VALOR INGRESADO NO ES VÁLIDO, INTENTE NUEVAMENTE." );
                                            }
                                        }
                                        iterar = true;
                                        while ( iterar ) {
                                            ingresado = JOptionPane.showInputDialog( null, "VALOR 2:" );
                                            if ( colegio.esNumero( ingresado ) ) {
                                                valorNota2 = Math.round( Double.parseDouble( ingresado ) * 10 ) / 10d;
                                                if ( valorNota2 > 7 ) {
                                                    JOptionPane.showMessageDialog( null, "ERROR AL EVALUAR PROMEDIOS.\nEL VALOR INGRESADO EXCEDE EL MÁXIMO ACEPTADO, INTENTE NUEVAMENTE." );
                                                } else {
                                                    if ( valorNota2 < 1 ) {
                                                        JOptionPane.showMessageDialog( null, "ERROR AL EVALUAR PROMEDIOS.\nEL VALOR INGRESADO ESTÁ POR DEBAJO DEL MÍNIMO ACEPTADO, INTENTE NUEVAMENTE." );
                                                    } else {
                                                        if ( valorNota == valorNota2 ) {
                                                            JOptionPane.showMessageDialog( null, "ERROR AL EVALUAR PROMEDIOS.\nEL VALOR INGRESADO ES IGUAL AL VALOR ANTERIOR, INTENTE NUEVAMENTE." );
                                                        } else {
                                                            iterar = false;
                                                        }
                                                    }
                                                }
                                            } else {
                                                JOptionPane.showMessageDialog( null, "ERROR AL EVALUAR PROMEDIOS.\nEL VALOR INGRESADO NO ES VÁLIDO, INTENTE NUEVAMENTE." );
                                            }
                                        }
                                        colegio.mostrarAlumnosEntreValor( clave, valorNota, valorNota2 );
                                        break;
                                        
                                    case "7":
                                        colegio.mostrarAlumnosRepitentes( clave );
                                        break;
                                        
                                    case "8":
                                        colegio.mostrarAlumnosSinNotas( clave );
                                        break;
                                        
                                    case "0":
                                        volver = true;
                                        this.setVisible( true );
                                        JOptionPane.showMessageDialog( null, "\nTODOS LOS DATOS INGRESADOS HASTA EL MOMENTO HAN SIDO PERDIDOS.\nPOR FAVOR, INGRÉSELOS NUEVAMENTE O DESBLOQUEE LOS VALORES DE PRUEBA." );
                                        break;
                                        
                                    default:
                                        JOptionPane.showMessageDialog( null, "ERROR AL EJECUTAR LA OPCIÓN.\nLA OPCIÓN INGRESADA NO ES VÁLIDA, INTENTE NUEVAMENTE." );
                                        break;
                                }
                            }
                        }
                this.setVisible( true );
                break;
                
            case "13":
                if ( colegio.hayAlumnos() ) {
                            JOptionPane.showMessageDialog( null, "ERROR AL MODIFICAR CURSOS DEL ALUMNO.\nNO HAY NINGÚN ALUMNO REGISTRADO EN EL SISTEMA." );
                        } else {
                            rut = JOptionPane.showInputDialog( null, "INGRESE EL RUT DEL ALUMNO CUYOS CURSOS DESEA MODIFICAR:" );
                            if ( colegio.verificarAlumno( rut ) ) {
                                if ( colegio.cantidadCursosAlumno( rut ) == 0 ) {
                                    JOptionPane.showMessageDialog( null, "ERROR AL MODIFICAR CURSOS DEL ALUMNO.\nEL ALUMNO INGRESADO NO ESTÁ INSCRITO EN NINGÚN CURSO." );
                                } else {
                                    while ( !volver ) {
                                        this.setVisible( false );
                                        JOptionPane.showMessageDialog( null, "EL MENÚ NECESARIO PARA SEGUIR TRABAJANDO SERÁ IMPRESO EN CONSOLA.\nPOR FAVOR, NO CIERRE ESTA VENTANA O CUALQUIER VENTANA SIGUIENTE PARA PODER INTERACTUAR CON ELLAS MÁS TARDE." );
                                        iterar = true;
                                        System.out.println( "\n ------------------------------------------------------------------" );
                                        System.out.println( "|  ¿QUÉ OPERACIÓN DESEA REALIZAR SOBRE LOS CURSOS DE ESTE ALUMNO?  |");
                                        System.out.println( " ------------------------------------------------------------------" );
                                        System.out.println( "|  1. REEMPLAZAR CURSO                                             |" );
                                        System.out.println( "|  2. ELIMINAR CURSO                                               |");
                                        System.out.println( "|  0. VOLVER                                                       |");
                                        System.out.println( " ------------------------------------------------------------------" );
                                        opcion = JOptionPane.showInputDialog( null, "INGRESE LA OPCIÓN QUE DESEA REALIZAR:" );
                                    
                                        switch( opcion ) {
                                            case "1":
                                                colegio.mostrarCursosAlumno( rut );
                                                clave = JOptionPane.showInputDialog( null, "INGRESE LA CLAVE DEL CURSO QUE DESEA REEMPLAZAR: " );
                                                if ( colegio.verificarCursoAlumno( rut, clave ) ) {
                                                    System.out.println( "\n¡CURSO ENCONTRADO CON ÉXITO!" );
                                                    ingresado = JOptionPane.showInputDialog( null, "INGRESE LA CLAVE DEL NUEVO CURSO:" );
                                                    if ( !colegio.verificarCursoAlumno( rut, ingresado ) ) {
                                                                                                                
                                                        nombre = JOptionPane.showInputDialog( null, "INGRESE EL NOMBRE DEL NUEVO CURSO:" );
                                                        asignatura = new Asignatura( nombre, ingresado );
                                                        
                                                        while ( iterar ) {
                                                            System.out.println( "\n ------------------------------------------------------------------------" );
                                                            System.out.println( "|            ¿ESTÁ SEGURO DE QUE DESEA REEMPLAZAR ESTE CURSO?            |" );
                                                            System.out.println( " ------------------------------------------------------------------------");
                                                            System.out.println( "  CURSO ORIGINAL: " + colegio.obtenerNombreCursoAlumno( rut, clave ) + " (" + clave + ")" );
                                                            System.out.println( " ------------------------------------------------------------------------");
                                                            System.out.println( "  NUEVO CURSO: " + nombre + " (" + ingresado + ")" );
                                                            System.out.println( " ------------------------------------------------------------------------");
                                                            System.out.println( "|                         ¿CONFIRMAR  OPERACIÓN?                         |" );
                                                            System.out.println( " ------------------------------------------------------------------------" );
                                                            System.out.println( "|  1. SÍ                                                                 |" );
                                                            System.out.println( "|  0. NO                                                                 |" );
                                                            System.out.println( " ------------------------------------------------------------------------" );
                                                            opcion = JOptionPane.showInputDialog( null, "INGRESE LA OPCIÓN QUE DESEA REALIZAR: " );
                                                        
                                                            switch( opcion ) {
                                                                case "1":
                                                                    colegio.reemplazarCursoAlumno( rut, clave, asignatura );
                                                                    System.out.println( "\nEL CURSO HA SIDO REEMPLAZADO CON ÉXITO." );
                                                                    iterar = false;
                                                                    break;
                                                                
                                                                case "0":
                                                                    System.out.println( "\nEL CURSO NO HA SIDO REEMPLAZADO." );
                                                                    iterar = false;
                                                                    break;
                                                            
                                                                default:
                                                                    System.out.println( "\nERROR AL EJECUTAR LA OPCIÓN. LA OPCIÓN INGRESADA NO ES VÁLIDA, INTENTE NUEVAMENTE.");
                                                                    break;
                                                            }
                                                        }
                                                    } else {
                                                        JOptionPane.showMessageDialog( null, "ERROR AL REEMPLAZAR CURSO DEL ALUMNO.\nLA CLAVE INGRESADA YA ESTÁ ASOCIADA A OTRO CURSO DEL MISMO ALUMNO." );
                                                    }
                                                } else {
                                                    System.out.println( "\nERROR AL REEMPLAZAR CURSO DEL ALUMNO. EL ALUMNO NO ESTÁ INSCRITO EN EL CURSO INGRESADO." );
                                                }
                                                iterar = true;
                                                while ( iterar ) {
                                                    System.out.println( "\n --------------------------------------------------------" );
                                                    System.out.println( "|  ¿DESEA SEGUIR MODIFICANDO LOS CURSOS DE ESTE ALUMNO?  |" );
                                                    System.out.println( " --------------------------------------------------------" );
                                                    System.out.println( "|  1. SÍ                                                 |" );
                                                    System.out.println( "|  0. NO                                                 |" );
                                                    System.out.println( " --------------------------------------------------------" );
                                                    opcion = JOptionPane.showInputDialog( null, "INGRESE LA OPCIÓN QUE DESEA REALIZAR:");
                                                    
                                                    switch( opcion ) {
                                                        case "1":
                                                            if ( colegio.cantidadCursosAlumno( rut ) != 0 ) {
                                                                iterar = false;
                                                            } else {
                                                                System.out.println( "\nERROR AL MODIFICAR CURSOS DEL ALUMNO. EL ALUMNO INGRESADO NO ESTÁ INSCRITO EN NINGÚN CURSO." );
                                                                volver = true;
                                                                iterar = false;
                                                            }
                                                            break;
                                                                
                                                        case "0":
                                                            volver = true;
                                                            iterar = false;
                                                            break;
                                                            
                                                        default:
                                                            System.out.println( "\nERROR AL EJECUTAR LA OPCIÓN. LA OPCIÓN INGRESADA NO ES VÁLIDA, INTENTE NUEVAMENTE.");
                                                            break;
                                                    }
                                                }
                                                break;
                                            
                                            case "2":
                                                colegio.mostrarCursosAlumno( rut );
                                                clave = JOptionPane.showInputDialog( null, "INGRESE LA CLAVE DEL CURSO QUE DESEA ELIMINAR: " );
                                                if ( colegio.verificarCursoAlumno( rut, clave ) ) {
                                                    System.out.println( "\n¡CURSO ENCONTRADO CON ÉXITO!" );
                                                    while ( iterar ) {
                                                        System.out.println( "\n ------------------------------------------------------------------------" );
                                                        System.out.println( "|             ¿ESTÁ SEGURO DE QUE DESEA ELIMINAR ESTE CURSO?             |" );
                                                        System.out.println( " ------------------------------------------------------------------------");
                                                        System.out.println( "  CURSO: " + colegio.obtenerNombreCursoAlumno( rut, clave ) + " (" + clave + ")" );
                                                        System.out.println( " ------------------------------------------------------------------------");
                                                        System.out.println( "|                         ¿CONFIRMAR  OPERACIÓN?                         |" );
                                                        System.out.println( " ------------------------------------------------------------------------" );
                                                        System.out.println( "|  1. SÍ                                                                 |" );
                                                        System.out.println( "|  0. NO                                                                 |" );
                                                        System.out.println( " ------------------------------------------------------------------------" );
                                                        opcion = JOptionPane.showInputDialog( null, "INGRESE LA OPCIÓN QUE DESEA REALIZAR:" );
                                                        
                                                        switch( opcion ) {
                                                            case "1":
                                                            colegio.eliminarCursoAlumno( rut, clave );
                                                            System.out.println( "\nEL CURSO HA SIDO ELIMINADO CON ÉXITO." );
                                                            iterar = false;
                                                            break;
                                                                
                                                            case "0":
                                                                System.out.println( "\nEL CURSO NO HA SIDO ELIMINADO." );
                                                                iterar = false;
                                                                break;
                                                            
                                                            default:
                                                                System.out.println( "\nERROR AL EJECUTAR LA OPCIÓN. LA OPCIÓN INGRESADA NO ES VÁLIDA, INTENTE NUEVAMENTE.");
                                                                break;
                                                        }
                                                    }
                                                } else {
                                                    System.out.println( "\nERROR AL ELIMINAR CURSO DEL ALUMNO. EL ALUMNO NO ESTÁ INSCRITO EN EL CURSO INGRESADO." );
                                                }
                                                iterar = true;
                                                while ( iterar ) {
                                                    System.out.println( "\n --------------------------------------------------------" );
                                                    System.out.println( "|  ¿DESEA SEGUIR MODIFICANDO LOS CURSOS DE ESTE ALUMNO?  |" );
                                                    System.out.println( " --------------------------------------------------------" );
                                                    System.out.println( "|  1. SÍ                                                 |" );
                                                    System.out.println( "|  0. NO                                                 |" );
                                                    System.out.println( " --------------------------------------------------------" );
                                                    opcion = JOptionPane.showInputDialog( null, "INGRESE LA OPCIÓN QUE DESEA REALIZAR: ");
                                                    
                                                    switch( opcion ) {
                                                        case "1":
                                                            if ( colegio.cantidadCursosAlumno( rut ) != 0 ) {
                                                                iterar = false;
                                                            } else {
                                                                System.out.println( "\nERROR AL MODIFICAR CURSOS DEL ALUMNO. EL ALUMNO INGRESADO NO ESTÁ INSCRITO EN NINGÚN CURSO." );
                                                                volver = true;
                                                                iterar = false;
                                                            }
                                                            break;
                                                                
                                                        case "0":
                                                            volver = true;
                                                            iterar = false;
                                                            break;
                                                            
                                                        default:
                                                            System.out.println( "\nERROR AL EJECUTAR LA OPCIÓN. LA OPCIÓN INGRESADA NO ES VÁLIDA, INTENTE NUEVAMENTE.");
                                                            break;
                                                    }
                                                }
                                                break;
                                        
                                            case "0":
                                                volver = true;
                                                this.setVisible( true );
                                                JOptionPane.showMessageDialog( null, "\nTODOS LOS DATOS INGRESADOS HASTA EL MOMENTO HAN SIDO PERDIDOS.\nPOR FAVOR, INGRÉSELOS NUEVAMENTE O DESBLOQUEE LOS VALORES DE PRUEBA." );
                                                break;
                                        
                                            default:
                                                JOptionPane.showMessageDialog( null, "ERROR AL EJECUTAR LA OPCIÓN.\nLA OPCIÓN INGRESADA NO ES VÁLIDA, INTENTE NUEVAMENTE." );
                                                break;
                                        }
                                    }
                                }
                            } else {
                                JOptionPane.showMessageDialog( null, "ERROR AL MODIFICAR CURSOS DEL ALUMNO.\nEL RUT INGRESADO NO SE CORRESPONDE CON EL DE NINGÚN ALUMNO." );
                            }
                        }
                break;
                
            case "14":
                if ( colegio.hayProfesores() ) {
                            JOptionPane.showMessageDialog( null, "ERROR AL MODIFICAR CURSOS DEL PROFESOR.\nNO HAY NINGÚN PROFESOR REGISTRADO EN EL SISTEMA." );
                        } else {
                            rut = JOptionPane.showInputDialog( null, "INGRESE EL RUT DEL PROFESOR CUYOS CURSOS DESEA MODIFICAR:" );
                            if ( colegio.verificarProfesor( rut ) ) {
                                if ( colegio.cantidadCursosProfesor( rut ) == 0 ) {
                                    JOptionPane.showMessageDialog( null, "ERROR AL MODIFICAR CURSOS DEL PROFESOR.\nEL PROFESOR INGRESADO NO ESTÁ INSCRITO EN NINGÚN CURSO." );
                                } else {
                                    while ( !volver ) {
                                        this.setVisible( false );
                                        JOptionPane.showMessageDialog( null, "EL MENÚ NECESARIO PARA SEGUIR TRABAJANDO SERÁ IMPRESO EN CONSOLA.\nPOR FAVOR, NO CIERRE ESTA VENTANA O CUALQUIER VENTANA SIGUIENTE PARA PODER INTERACTUAR CON ELLAS MÁS TARDE." );
                                        iterar = true;
                                        System.out.println( "\n --------------------------------------------------------------------" );
                                        System.out.println( "|  ¿QUÉ OPERACIÓN DESEA REALIZAR SOBRE LOS CURSOS DE ESTE PROFESOR?  |");
                                        System.out.println( " --------------------------------------------------------------------" );
                                        System.out.println( "|  1. REEMPLAZAR CURSO                                               |" );
                                        System.out.println( "|  2. ELIMINAR CURSO                                                 |");
                                        System.out.println( "|  0. VOLVER                                                         |");
                                        System.out.println( " --------------------------------------------------------------------" );
                                        opcion = JOptionPane.showInputDialog( null, "INGRESE LA OPCIÓN QUE DESEA REALIZAR:" );
                                    
                                        switch( opcion ) {
                                            case "1":
                                                colegio.mostrarCursosProfesor( rut );
                                                clave = JOptionPane.showInputDialog( null, "INGRESE LA CLAVE DEL CURSO QUE DESEA REEMPLAZAR: " );
                                                if ( colegio.verificarCursoProfesor( rut, clave ) ) {
                                                    System.out.println( "\n¡CURSO ENCONTRADO CON ÉXITO!" );
                                                    ingresado = JOptionPane.showInputDialog( null, "INGRESE LA CLAVE DEL NUEVO CURSO:" );
                                                    if ( !colegio.verificarCursoProfesor( rut, ingresado ) ) {
                                                                                                                
                                                        nombre = JOptionPane.showInputDialog( null, "INGRESE EL NOMBRE DEL NUEVO CURSO:" );
                                                        asignatura = new Asignatura( nombre, ingresado );
                                                        
                                                        while ( iterar ) {
                                                            System.out.println( "\n ------------------------------------------------------------------------" );
                                                            System.out.println( "|            ¿ESTÁ SEGURO DE QUE DESEA REEMPLAZAR ESTE CURSO?            |" );
                                                            System.out.println( " ------------------------------------------------------------------------");
                                                            System.out.println( "  CURSO ORIGINAL: " + colegio.obtenerNombreCursoProfesor( rut, clave ) + " (" + clave + ")" );
                                                            System.out.println( " ------------------------------------------------------------------------");
                                                            System.out.println( "  NUEVO CURSO: " + nombre + " (" + ingresado + ")" );
                                                            System.out.println( " ------------------------------------------------------------------------");
                                                            System.out.println( "|                         ¿CONFIRMAR  OPERACIÓN?                         |" );
                                                            System.out.println( " ------------------------------------------------------------------------" );
                                                            System.out.println( "|  1. SÍ                                                                 |" );
                                                            System.out.println( "|  0. NO                                                                 |" );
                                                            System.out.println( " ------------------------------------------------------------------------" );
                                                            opcion = JOptionPane.showInputDialog( null, "INGRESE LA OPCIÓN QUE DESEA REALIZAR: " );
                                                        
                                                            switch( opcion ) {
                                                                case "1":
                                                                    colegio.reemplazarCursoProfesor( rut, clave, asignatura );
                                                                    System.out.println( "\nEL CURSO HA SIDO REEMPLAZADO CON ÉXITO." );
                                                                    iterar = false;
                                                                    break;
                                                                
                                                                case "0":
                                                                    System.out.println( "\nEL CURSO NO HA SIDO REEMPLAZADO." );
                                                                    iterar = false;
                                                                    break;
                                                            
                                                                default:
                                                                    System.out.println( "\nERROR AL EJECUTAR LA OPCIÓN. LA OPCIÓN INGRESADA NO ES VÁLIDA, INTENTE NUEVAMENTE.");
                                                                    break;
                                                            }
                                                        }
                                                    } else {
                                                        JOptionPane.showMessageDialog( null, "ERROR AL REEMPLAZAR CURSO DEL PROFESOR.\nLA CLAVE INGRESADA YA ESTÁ ASOCIADA A OTRO CURSO DEL MISMO PROFESOR." );
                                                    }
                                                } else {
                                                    System.out.println( "\nERROR AL REEMPLAZAR CURSO DEL PROFESOR. EL PROFESOR NO ESTÁ INSCRITO EN EL CURSO INGRESADO." );
                                                }
                                                iterar = true;
                                                while ( iterar ) {
                                                    System.out.println( "\n ----------------------------------------------------------" );
                                                    System.out.println( "|  ¿DESEA SEGUIR MODIFICANDO LOS CURSOS DE ESTE PROFESOR?  |" );
                                                    System.out.println( " ----------------------------------------------------------" );
                                                    System.out.println( "|  1. SÍ                                                   |" );
                                                    System.out.println( "|  0. NO                                                   |" );
                                                    System.out.println( " ----------------------------------------------------------" );
                                                    opcion = JOptionPane.showInputDialog( null, "INGRESE LA OPCIÓN QUE DESEA REALIZAR:");
                                                    
                                                    switch( opcion ) {
                                                        case "1":
                                                            if ( colegio.cantidadCursosAlumno( rut ) != 0 ) {
                                                                iterar = false;
                                                            } else {
                                                                System.out.println( "\nERROR AL MODIFICAR CURSOS DEL PROFESOR. EL PROFESOR INGRESADO NO ESTÁ INSCRITO EN NINGÚN CURSO." );
                                                                volver = true;
                                                                iterar = false;
                                                            }
                                                            break;
                                                                
                                                        case "0":
                                                            volver = true;
                                                            iterar = false;
                                                            break;
                                                            
                                                        default:
                                                            System.out.println( "\nERROR AL EJECUTAR LA OPCIÓN. LA OPCIÓN INGRESADA NO ES VÁLIDA, INTENTE NUEVAMENTE.");
                                                            break;
                                                    }
                                                }
                                                break;
                                            
                                            case "2":
                                                colegio.mostrarCursosProfesor( rut );
                                                clave = JOptionPane.showInputDialog( null, "INGRESE LA CLAVE DEL CURSO QUE DESEA ELIMINAR: " );
                                                if ( colegio.verificarCursoProfesor( rut, clave ) ) {
                                                    System.out.println( "\n¡CURSO ENCONTRADO CON ÉXITO!" );
                                                    while ( iterar ) {
                                                        System.out.println( "\n ------------------------------------------------------------------------" );
                                                        System.out.println( "|             ¿ESTÁ SEGURO DE QUE DESEA ELIMINAR ESTE CURSO?             |" );
                                                        System.out.println( " ------------------------------------------------------------------------");
                                                        System.out.println( "  CURSO: " + colegio.obtenerNombreCursoProfesor( rut, clave ) + " (" + clave + ")" );
                                                        System.out.println( " ------------------------------------------------------------------------");
                                                        System.out.println( "|                         ¿CONFIRMAR  OPERACIÓN?                         |" );
                                                        System.out.println( " ------------------------------------------------------------------------" );
                                                        System.out.println( "|  1. SÍ                                                                 |" );
                                                        System.out.println( "|  0. NO                                                                 |" );
                                                        System.out.println( " ------------------------------------------------------------------------" );
                                                        opcion = JOptionPane.showInputDialog( null, "INGRESE LA OPCIÓN QUE DESEA REALIZAR:" );
                                                        
                                                        switch( opcion ) {
                                                            case "1":
                                                            colegio.eliminarCursoProfesor( rut, clave );
                                                            System.out.println( "\nEL CURSO HA SIDO ELIMINADO CON ÉXITO." );
                                                            iterar = false;
                                                            break;
                                                                
                                                            case "0":
                                                                System.out.println( "\nEL CURSO NO HA SIDO ELIMINADO." );
                                                                iterar = false;
                                                                break;
                                                            
                                                            default:
                                                                System.out.println( "\nERROR AL EJECUTAR LA OPCIÓN. LA OPCIÓN INGRESADA NO ES VÁLIDA, INTENTE NUEVAMENTE.");
                                                                break;
                                                        }
                                                    }
                                                } else {
                                                    System.out.println( "\nERROR AL ELIMINAR CURSO DEL PROFESOR. EL PROFESOR NO ESTÁ INSCRITO EN EL CURSO INGRESADO." );
                                                }
                                                iterar = true;
                                                while ( iterar ) {
                                                    System.out.println( "\n ----------------------------------------------------------" );
                                                    System.out.println( "|  ¿DESEA SEGUIR MODIFICANDO LOS CURSOS DE ESTE PROFESOR?  |" );
                                                    System.out.println( " ----------------------------------------------------------" );
                                                    System.out.println( "|  1. SÍ                                                   |" );
                                                    System.out.println( "|  0. NO                                                   |" );
                                                    System.out.println( " ----------------------------------------------------------" );
                                                    opcion = JOptionPane.showInputDialog( null, "INGRESE LA OPCIÓN QUE DESEA REALIZAR: ");
                                                    
                                                    switch( opcion ) {
                                                        case "1":
                                                            if ( colegio.cantidadCursosProfesor( rut ) != 0 ) {
                                                                iterar = false;
                                                            } else {
                                                                System.out.println( "\nERROR AL MODIFICAR CURSOS DEL PROFESOR. EL PROFESOR INGRESADO NO ESTÁ INSCRITO EN NINGÚN CURSO." );
                                                                volver = true;
                                                                iterar = false;
                                                            }
                                                            break;
                                                                
                                                        case "0":
                                                            volver = true;
                                                            iterar = false;
                                                            break;
                                                            
                                                        default:
                                                            System.out.println( "\nERROR AL EJECUTAR LA OPCIÓN. LA OPCIÓN INGRESADA NO ES VÁLIDA, INTENTE NUEVAMENTE.");
                                                            break;
                                                    }
                                                }
                                                break;
                                        
                                            case "0":
                                                volver = true;
                                                this.setVisible( true );
                                                JOptionPane.showMessageDialog( null, "\nTODOS LOS DATOS INGRESADOS HASTA EL MOMENTO HAN SIDO PERDIDOS.\nPOR FAVOR, INGRÉSELOS NUEVAMENTE O DESBLOQUEE LOS VALORES DE PRUEBA." );
                                                break;
                                        
                                            default:
                                                JOptionPane.showMessageDialog( null, "ERROR AL EJECUTAR LA OPCIÓN.\nLA OPCIÓN INGRESADA NO ES VÁLIDA, INTENTE NUEVAMENTE." );
                                                break;
                                        }
                                    }
                                }
                            } else {
                                JOptionPane.showMessageDialog( null, "ERROR AL MODIFICAR CURSOS DEL PROFESOR.\nEL RUT INGRESADO NO SE CORRESPONDE CON EL DE NINGÚN PROFESOR." );
                            }
                        }
                break;
                
            case "15":
                if ( colegio.hayAlumnos() ) {
                            System.out.println( "\nERROR AL AGREGAR NOTA. NO HAY NINGÚN ALUMNO REGISTRADO EN EL SISTEMA." );
                        } else {
                            if ( asignatura == null ) {
                                System.out.println( "\nERROR AL AGREGAR NOTA. NO HAY NINGÚN CURSO REGISTRADO EN EL SISTEMA." );
                            } else {
                                rut = JOptionPane.showInputDialog( null, "INGRESE EL RUT DEL ALUMNO AL QUE DESEA AGREGAR UNA NOTA:" );
                                if ( colegio.verificarAlumno( rut ) ) {
                                    if ( colegio.cantidadCursosAlumno( rut ) == 0 ) {
                                        System.out.println( "\nERROR AL AGREGAR NOTA. EL ALUMNO INGRESADO NO ESTÁ INSCRITO EN NINGÚN CURSO." );
                                    } else {
                                        while ( !volver ) {
                                            this.setVisible( false );
                                            JOptionPane.showMessageDialog( null, "EL MENÚ NECESARIO PARA SEGUIR TRABAJANDO SERÁ IMPRESO EN CONSOLA.\nPOR FAVOR, NO CIERRE ESTA VENTANA O CUALQUIER VENTANA SIGUIENTE PARA PODER INTERACTUAR CON ELLAS MÁS TARDE." );
                                            colegio.mostrarCursosAlumno( rut );
                                            clave = JOptionPane.showInputDialog( null, "INGRESE LA CLAVE DEL CURSO EN EL CUAL DESEA AGREGAR LA NOTA:" );
                                            if ( colegio.verificarCursoAlumno( rut, clave ) ) {
                                                while ( !volver ) {
                                                    iterar = true;
                                                    evaluacion = JOptionPane.showInputDialog( null, "INGRESE EL NOMBRE DE LA EVALUACIÓN:" );
                                                    if ( !colegio.verificarEvaluacionAlumno( rut, clave, evaluacion ) ) {
                                                        while ( iterar ) {
                                                            ingresado = JOptionPane.showInputDialog( null, "INGRESE LA NOTA QUE DESEA AGREGAR\n(ADVERTENCIA: LA NOTA DEBE TENER UN VALOR ENTRE 1 Y 7):" );
                                                            if ( colegio.esNumero( ingresado ) ) {
                                                                valorNota = Math.round( Double.parseDouble( ingresado ) * 10 ) / 10d;
                                                                if ( valorNota > 7 ) {
                                                                    System.out.println( "\nERROR AL AGREGAR NOTA. EL VALOR INGRESADO EXCEDE EL MÁXIMO ACEPTADO, INTENTE NUEVAMENTE." );
                                                                } else {
                                                                    if ( valorNota < 1 ) {
                                                                        System.out.println( "\nERROR AL AGREGAR NOTA. EL VALOR INGRESADO ESTÁ POR DEBAJO DEL MÍNIMO ACEPTADO, INTENTE NUEVAMENTE." );
                                                                    } else {
                                                                        iterar = false;
                                                                    }
                                                                }
                                                            } else {
                                                                System.out.println( "\nERROR AL AGREGAR NOTA. EL VALOR INGRESADO NO ES VÁLIDO, INTENTE NUEVAMENTE." );
                                                            }
                                                        } 
                                                        nota = new Nota( evaluacion, valorNota );
                                                        colegio.agregarNotaAlumno( rut, clave, nota );
                                                        System.out.println( "\nLA NOTA FUE AGREGADA CON ÉXITO." );
                                                        iterar = true;
                                                        while ( iterar ) {
                                                            System.out.println( "\n ---------------------------------------------------" );
                                                            System.out.println( "|      ¿DESEA AGREGAR OTRA NOTA EN ESTE CURSO?      |" );
                                                            System.out.println( " ---------------------------------------------------" );
                                                            System.out.println( "|  1. SÍ                                            |" );
                                                            System.out.println( "|  0. NO                                            |" );
                                                            System.out.println( " ---------------------------------------------------" );
                                                            opcion = JOptionPane.showInputDialog( null, "INGRESE LA OPCIÓN QUE DESEA REALIZAR: ");
                                                    
                                                            switch( opcion ) {
                                                                case "1":
                                                                    iterar = false;
                                                                    break;
                                                            
                                                                case "0":
                                                                    iterar = false;
                                                                    volver = true;
                                                                    this.setVisible( true );
                                                                    JOptionPane.showMessageDialog( null, "\nTODOS LOS DATOS INGRESADOS HASTA EL MOMENTO HAN SIDO PERDIDOS.\nPOR FAVOR, INGRÉSELOS NUEVAMENTE O DESBLOQUEE LOS VALORES DE PRUEBA." );
                                                                    break;
                                                            
                                                                default:
                                                                    System.out.println( "\nERROR AL EJECUTAR LA OPCIÓN. LA OPCIÓN INGRESADA NO ES VÁLIDA, INTENTE NUEVAMENTE." );
                                                                    break;
                                                            }
                                                        }
                                                    } else {
                                                        System.out.println( "\nERROR AL AGREGAR NOTA. EL NOMBRE INGRESADO YA ESTÁ ASOCIADO A OTRA EVALUACIÓN DEL MISMO ALUMNO, INTENTE NUEVAMENTE." );
                                                    }
                                                }
                                            } else {
                                                System.out.println( "\nERROR AL AGREGAR NOTA. EL ALUMNO NO ESTÁ INSCRITO EN EL CURSO INGRESADO." );
                                            }
                                            iterar = true;
                                            while ( iterar ) {
                                                System.out.println( "\n ---------------------------------------------------" );
                                                System.out.println( "|  ¿DESEA SEGUIR AGREGANDO NOTAS PARA ESTE ALUMNO?  |" );
                                                System.out.println( " ---------------------------------------------------" );
                                                System.out.println( "|  1. SÍ                                            |" );
                                                System.out.println( "|  0. NO                                            |" );
                                                System.out.println( " ---------------------------------------------------" );
                                                opcion = JOptionPane.showInputDialog( null, "INGRESE LA OPCIÓN QUE DESEA REALIZAR:");
                                                
                                                switch( opcion ) {
                                                    case "1":
                                                        iterar = false;
                                                        volver = false;
                                                        break;
                                                    
                                                    case "0":
                                                        iterar = false;
                                                        volver = true;
                                                        this.setVisible( true );
                                                        JOptionPane.showMessageDialog( null, "\nTODOS LOS DATOS INGRESADOS HASTA EL MOMENTO HAN SIDO PERDIDOS.\nPOR FAVOR, INGRÉSELOS NUEVAMENTE O DESBLOQUEE LOS VALORES DE PRUEBA." );    
                                                        break;
                                                        
                                                    default:
                                                        System.out.println( "\nERROR AL EJECUTAR LA OPCIÓN. LA OPCIÓN INGRESADA NO ES VÁLIDA, INTENTE NUEVAMENTE." );
                                                        break;
                                                }
                                            }
                                        }
                                    }
                                } else {
                                    System.out.println( "\nERROR AL AGREGAR NOTA. EL RUT INGRESADO NO SE CORRESPONDE CON EL DE NINGÚN ALUMNO." );
                                }
                            }
                        }
                break;
                
            case "16":
                if ( colegio.hayAlumnos() ) {
                    JOptionPane.showMessageDialog( null, "ERROR AL REVISAR SITUACIÓN ACADÉMICA.\nNO HAY NINGÚN ALUMNO REGISTRADO EN EL SISTEMA." );
                } else {
                    if ( asignatura == null ) {
                        JOptionPane.showMessageDialog( null, "ERROR AL REVISAR SITUACIÓN ACADÉMICA.\nNO HAY NINGÚN CURSO REGISTRADO EN EL SISTEMA." );
                    } else {
                        this.setVisible( false );
                        JOptionPane.showMessageDialog( null, "EL MENÚ NECESARIO PARA SEGUIR TRABAJANDO SERÁ IMPRESO EN CONSOLA.\nPOR FAVOR, NO CIERRE ESTA VENTANA O CUALQUIER VENTANA SIGUIENTE PARA PODER INTERACTUAR CON ELLAS MÁS TARDE." );
                        while ( !volver ) {
                            System.out.println( "\n -------------------------------------------------------------------------" );
                            System.out.println( "|                 ¿QUÉ SITUACIÓN ACADÉMICA DESEA REVISAR?                 |" );
                            System.out.println( " -------------------------------------------------------------------------");
                            System.out.println( "|  1. BUSCAR ALUMNO CON PROMEDIO MÁS ALTO                                 |" );
                            System.out.println( "|  2. BUSCAR ALUMNO CON PROMEDIO MÁS BAJO                                 |" );
                            System.out.println( "|  3. ALUMNOS CON PROMEDIO SOBRESALIENTE                                  |" );
                            System.out.println( "|  4. ALUMNOS EN SITUACIÓN DE REPITENCIA                                  |" );
                            System.out.println( "|  0. VOLVER                                                              |" );
                            System.out.println( " -------------------------------------------------------------------------" );
                            opcion = JOptionPane.showInputDialog( null, "INGRESE LA OPCIÓN QUE DESEA REALIZAR\n(OBSERVACIÓN: ESTAS OPERACIONES TRABAJAN EN BASE A LA TOTALIDAD DE CURSOS Y ALUMNOS):" );
                                    
                            switch( opcion ) {
                                case "1":
                                    colegio.mostrarAlumnoPromedioMasAlto();
                                    break;
                                            
                                case "2":
                                    colegio.mostrarAlumnoPromedioMasBajo();
                                    break;
                                            
                                case "3":
                                    colegio.totalAlumnosPromedioSobresaliente();
                                    break;
                                            
                                case "4":
                                    colegio.totalAlumnosEnSituaciónRepitencia();
                                    break;
                                            
                                case "0":
                                    volver = true;
                                    this.setVisible( true );
                                    JOptionPane.showMessageDialog( null, "\nTODOS LOS DATOS INGRESADOS HASTA EL MOMENTO HAN SIDO PERDIDOS.\nPOR FAVOR, INGRÉSELOS NUEVAMENTE O DESBLOQUEE LOS VALORES DE PRUEBA." );
                                    break;
                                            
                                default:
                                    JOptionPane.showMessageDialog( null, "ERROR AL REVISAR SITUACIÓN ACADÉMICA.\nLA OPCIÓN INGRESADA NO ES VÁLIDA, INTENTE NUEVAMENTE." );
                                    break;
                            }  
                        }
                    }
                }
                break;
                
            case "17":
                if ( colegio.hayAlumnos() ) {
                            System.out.println( "\nERROR AL ELIMINAR ALUMNO. NO HAY NINGÚN ALUMNO REGISTRADO EN EL SISTEMA." );
                        } else {
                            rut = JOptionPane.showInputDialog( null, "INGRESE EL RUT DEL ALUMNO QUE DESEA ELIMINAR:" );
                            if ( colegio.verificarAlumno( rut ) ) {
                                System.out.println( "\n¡ALUMNO ENCONTRADO CON ÉXITO!" );
                                while ( iterar ) {
                                    System.out.println( "\n -------------------------------------------------------------------------" );
                                    System.out.println( "|             ¿ESTÁ SEGURO DE QUE DESEA ELIMINAR ESTE ALUMNO?             |" );
                                    System.out.println( " -------------------------------------------------------------------------");
                                    System.out.println( "  ALUMNO: " + colegio.obtenerNombreAlumno( rut ) + " (" + rut + ")" );
                                    System.out.println( " -------------------------------------------------------------------------");
                                    System.out.println( "|                          ¿CONFIRMAR OPERACIÓN?                          |" );
                                    System.out.println( " -------------------------------------------------------------------------" );
                                    System.out.println( "|  1. SÍ                                                                  |" );
                                    System.out.println( "|  0. NO                                                                  |" );
                                    System.out.println( " -------------------------------------------------------------------------" );
                                    opcion = JOptionPane.showInputDialog( null, "INGRESE LA OPCIÓN QUE DESEA REALIZAR:" );
                                    
                                    switch( opcion ) {
                                        case "1":
                                            colegio.eliminarAlumno( rut );
                                            System.out.println( "\nEL ALUMNO HA SIDO ELIMINADO CON ÉXITO." );
                                            iterar = false;
                                            break;
                                                                
                                        case "0":
                                            System.out.println( "\nEL ALUMNO NO HA SIDO ELIMINADO." );
                                            iterar = false;
                                            break;
                                                            
                                        default:
                                            System.out.println( "\nERROR AL EJECUTAR LA OPCIÓN. LA OPCIÓN INGRESADA NO ES VÁLIDA, INTENTE NUEVAMENTE." );
                                            break;
                                    }
                                }
                            } else {
                                System.out.println( "\nERROR AL ELIMINAR ALUMNO. EL RUT INGRESADO NO SE CORRESPONDE CON EL DE NINGÚN ALUMNO." );
                            }
                        }
                break;
                
            case "18":
                if ( colegio.hayProfesores() ) {
                            System.out.println( "\nERROR AL ELIMINAR PROFESOR. NO HAY NINGÚN PROFESOR REGISTRADO EN EL SISTEMA." );
                        } else {
                            rut = JOptionPane.showInputDialog( null, "INGRESE EL RUT DEL PROFESOR QUE DESEA ELIMINAR:" );
                            if ( colegio.verificarProfesor( rut ) ) {
                                System.out.println( "\n¡PROFESOR ENCONTRADO CON ÉXITO!" );
                                while ( iterar ) {
                                    System.out.println( "\n -------------------------------------------------------------------------" );
                                    System.out.println( "|            ¿ESTÁ SEGURO DE QUE DESEA ELIMINAR ESTE PROFESOR?            |" );
                                    System.out.println( " -------------------------------------------------------------------------");
                                    System.out.println( "  PROFESOR: " + colegio.obtenerNombreProfesor( rut ) + " (" + rut + ")" );
                                    System.out.println( " -------------------------------------------------------------------------");
                                    System.out.println( "|                          ¿CONFIRMAR OPERACIÓN?                          |" );
                                    System.out.println( " -------------------------------------------------------------------------" );
                                    System.out.println( "|  1. SÍ                                                                  |" );
                                    System.out.println( "|  0. NO                                                                  |" );
                                    System.out.println( " -------------------------------------------------------------------------" );
                                    opcion = JOptionPane.showInputDialog( null, "INGRESE LA OPCIÓN QUE DESEA REALIZAR:" );
                                                        
                                    switch( opcion ) {
                                        case "1":
                                            colegio.eliminarProfesor( rut );
                                            System.out.println( "\nEL PROFESOR HA SIDO ELIMINADO CON ÉXITO." );
                                            iterar = false;
                                            break;
                                                                
                                        case "0":
                                            System.out.println( "\nEL PROFESOR NO HA SIDO ELIMINADO." );
                                            iterar = false;
                                            break;
                                                            
                                        default:
                                            System.out.println( "\nERROR AL EJECUTAR LA OPCIÓN. LA OPCIÓN INGRESADA NO ES VÁLIDA, INTENTE NUEVAMENTE." );
                                            break;
                                    }
                                }
                            } else {
                                System.out.println( "\nERROR AL ELIMINAR PROFESOR. EL RUT INGRESADO NO SE CORRESPONDE CON EL DE NINGÚN PROFESOR." );
                            }
                        }
                break;
                
            case "0":
                if ( JOptionPane.showConfirmDialog( null, "¿DESEA VOLVER AL MENÚ PRINCIPAL?\nADVERTENCIA: LOS DATOS INGRESADOS NO SE GUARDARÁN." ) == 0 ) {
                    if ( JOptionPane.showConfirmDialog( null, "¿DESEA CREAR UN ARCHIVO .txt, CON LOS DATOS DE LOS ALUMNOS Y\nPROFESORES REGISTRADOS HASTA EL MOMENTO, EN SU ESCRITORIO?" ) == 0) {
                        while ( iterar ) {
                            ingresado = JOptionPane.showInputDialog( null, "INGRESE EL NOMBRE DEL USUARIO DE SU COMPUTADORA:" );
                            nombre = JOptionPane.showInputDialog( null, "INGRESE EL NOMBRE QUE DESEA DAR AL ARCHIVO:" );
                            String direccion = "C:/Users/" + ingresado + "/Desktop/" + nombre;
                            try {
                                colegio.crearArchivotxt( direccion );
                                JOptionPane.showMessageDialog( null, "¡ARCHIVO CREADO CON ÉXITO!" );
                                iterar = false;
                            } catch( FileNotFoundException e ) {
                                JOptionPane.showMessageDialog( null, "ERROR AL CREAR ARCHIVO.\nEL NOMBRE DE USUARIO INGRESADO NO SE CORRESPONDE CON EL DE SU COMPUTADORA, INTENTE NUEVAMENTE." );
                            } catch (IOException ex) {
                                Logger.getLogger(MenuAdministrador.class.getName()).log(Level.SEVERE, null, ex);
                            }
                        }
                    }
                    menu.setVisible( true );
                    this.setVisible( false );
                }
                break;
                
            default:
                JOptionPane.showMessageDialog( null, "ERROR AL EJECUTAR LA OPCIÓN.\nLA OPCIÓN INGRESADA NO ES VÁLIDA, INTENTE NUEVAMENTE." );
                break;
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
